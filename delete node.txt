from sys import stdin
import sys

sys.setrecursionlimit(10**9)

#Following is the Node class already written for the Linked List
class Node :
    def __init__(self, data) :
        self.data = data
        self.next = None


# def deleteNode(head, pos) :
#     if pos<0:
#         return head 
#     prev=None
#     curr=head
#     count=0
#     while count<pos-1:
#         prev=curr
#         curr=curr.next
#         count+=1
#     prev.next=curr.next   
#     curr=None 
#     return head

def deleteNode(head, pos) :
    count = 0
    if head is None:
        return 0
    
    if pos==0:
        temp = head.next
        head.data = None
        head.next = None
        head = temp
        
        return head
    
    curr = head 
    prev = None
    
    while count != pos:
        if curr.next is None:
            break
        else:
            prev = curr 
            curr = curr.next
            count = count + 1
        
    if count == pos:
        prev.next = curr.next
        curr.data = None 
        curr.next = None 
        
    return head
        
        
    
    
     
    
        
    
    
        
        
    




#Taking Input Using Fast I/O
def takeInput() :
    head = None
    tail = None

    datas = list(map(int, stdin.readline().rstrip().split(" ")))

    i = 0
    while (i < len(datas)) and (datas[i] != -1) :
        data = datas[i]
        newNode = Node(data)

        if head is None :
            head = newNode
            tail = newNode

        else :
            tail.next = newNode
            tail = newNode

        i += 1

    return head



#to print the linked list 
def printLinkedList(head) :

    while head is not None :
        print(head.data, end = " ")
        head = head.next

    print()


#main
t = int(stdin.readline().strip())

while t > 0 :
    
    head = takeInput()
    pos = int(stdin.readline().rstrip())
    
    head = deleteNode(head, pos)
    printLinkedList(head)

    t -= 1